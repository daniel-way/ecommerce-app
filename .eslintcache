[{"/Users/danielway/Desktop/ecommerce-app/src/index.js":"1","/Users/danielway/Desktop/ecommerce-app/src/App.js":"2","/Users/danielway/Desktop/ecommerce-app/src/components/Products/Products.jsx":"3","/Users/danielway/Desktop/ecommerce-app/src/components/Product/Product.jsx":"4","/Users/danielway/Desktop/ecommerce-app/src/components/Product/styles.js":"5","/Users/danielway/Desktop/ecommerce-app/src/components/Navbar/Navbar.jsx":"6","/Users/danielway/Desktop/ecommerce-app/src/components/Navbar/styles.js":"7","/Users/danielway/Desktop/ecommerce-app/src/components/index.js":"8","/Users/danielway/Desktop/ecommerce-app/src/components/Products/styles.js":"9","/Users/danielway/Desktop/ecommerce-app/src/lib/commerce.js":"10","/Users/danielway/Desktop/ecommerce-app/src/components/Cart/Cart.jsx":"11","/Users/danielway/Desktop/ecommerce-app/src/components/Cart/styles.js":"12","/Users/danielway/Desktop/ecommerce-app/src/components/Cart/CartItem/CartItem.jsx":"13","/Users/danielway/Desktop/ecommerce-app/src/components/Cart/CartItem/styles.js":"14","/Users/danielway/Desktop/ecommerce-app/src/components/CheckoutFrom/Checkout/Checkout.jsx":"15","/Users/danielway/Desktop/ecommerce-app/src/components/CheckoutFrom/Checkout/styles.js":"16","/Users/danielway/Desktop/ecommerce-app/src/components/CheckoutFrom/AddressForm.jsx":"17","/Users/danielway/Desktop/ecommerce-app/src/components/CheckoutFrom/PaymentForm.jsx":"18","/Users/danielway/Desktop/ecommerce-app/src/components/CheckoutFrom/FormInput.jsx":"19","/Users/danielway/Desktop/ecommerce-app/src/components/CheckoutFrom/Review.jsx":"20"},{"size":146,"mtime":1606808930347,"results":"21","hashOfConfig":"22"},{"size":2971,"mtime":1607200137117,"results":"23","hashOfConfig":"22"},{"size":629,"mtime":1607066736345,"results":"24","hashOfConfig":"22"},{"size":1258,"mtime":1607127884669,"results":"25","hashOfConfig":"22"},{"size":396,"mtime":1606841519548,"results":"26","hashOfConfig":"22"},{"size":1551,"mtime":1607109726103,"results":"27","hashOfConfig":"22"},{"size":1565,"mtime":1606891185948,"results":"28","hashOfConfig":"22"},{"size":231,"mtime":1607110972593,"results":"29","hashOfConfig":"22"},{"size":287,"mtime":1607062976651,"results":"30","hashOfConfig":"22"},{"size":126,"mtime":1607063845881,"results":"31","hashOfConfig":"22"},{"size":1933,"mtime":1607110493590,"results":"32","hashOfConfig":"22"},{"size":570,"mtime":1607069180031,"results":"33","hashOfConfig":"22"},{"size":1310,"mtime":1607110388907,"results":"34","hashOfConfig":"22"},{"size":333,"mtime":1607108738908,"results":"35","hashOfConfig":"22"},{"size":3972,"mtime":1607130527738,"results":"36","hashOfConfig":"22"},{"size":1158,"mtime":1607110910167,"results":"37","hashOfConfig":"22"},{"size":4784,"mtime":1607121595788,"results":"38","hashOfConfig":"22"},{"size":2865,"mtime":1607130363162,"results":"39","hashOfConfig":"22"},{"size":581,"mtime":1607127246990,"results":"40","hashOfConfig":"22"},{"size":904,"mtime":1607122939154,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"ejratn",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/danielway/Desktop/ecommerce-app/src/index.js",[],["85","86"],"/Users/danielway/Desktop/ecommerce-app/src/App.js",[],"/Users/danielway/Desktop/ecommerce-app/src/components/Products/Products.jsx",[],"/Users/danielway/Desktop/ecommerce-app/src/components/Product/Product.jsx",[],"/Users/danielway/Desktop/ecommerce-app/src/components/Product/styles.js",[],"/Users/danielway/Desktop/ecommerce-app/src/components/Navbar/Navbar.jsx",["87","88"],"import React from 'react';\nimport { AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Typography } from '@material-ui/core';\nimport { ShoppingCart} from '@material-ui/icons';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport logo from '../../assets/commerce.png';\nimport useStyles from './styles';\n\nconst Navbar = ({ totalItems }) => {\n    const classes = useStyles();\n    const location = useLocation();\n\n    return <>\n            <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\n                <Toolbar>\n                <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title} color=\"inherit\">\n                    <img src={logo} alt=\"Commerce.js\" height=\"25px\" className={classes.image}/>\n                    Timmy & Tommy's\n                </Typography>\n                <div className={classes.grow} />\n                {(location.pathname === '/') && (\n                    <div className={classes.button}>\n                        {/* material-ui allows you to customize the type of component you use, e.g. this IconButton being a Link to the cart*/}\n                        <IconButton component={Link} to=\"/cart\" aria-label=\"Show cart items\" color=\"inherit\">\n                            <Badge badgeContent={totalItems} color=\"secondary\">\n                                <ShoppingCart />\n                            </Badge>\n                        </IconButton>\n                    </div>\n                )}\n                </Toolbar>\n            </AppBar>\n    </>;\n}\n\nexport default Navbar;\n","/Users/danielway/Desktop/ecommerce-app/src/components/Navbar/styles.js",[],"/Users/danielway/Desktop/ecommerce-app/src/components/index.js",[],"/Users/danielway/Desktop/ecommerce-app/src/components/Products/styles.js",[],"/Users/danielway/Desktop/ecommerce-app/src/lib/commerce.js",[],"/Users/danielway/Desktop/ecommerce-app/src/components/Cart/Cart.jsx",[],"/Users/danielway/Desktop/ecommerce-app/src/components/Cart/styles.js",[],"/Users/danielway/Desktop/ecommerce-app/src/components/Cart/CartItem/CartItem.jsx",[],"/Users/danielway/Desktop/ecommerce-app/src/components/Cart/CartItem/styles.js",[],"/Users/danielway/Desktop/ecommerce-app/src/components/CheckoutFrom/Checkout/Checkout.jsx",["89"],"/Users/danielway/Desktop/ecommerce-app/src/components/CheckoutFrom/Checkout/styles.js",[],"/Users/danielway/Desktop/ecommerce-app/src/components/CheckoutFrom/AddressForm.jsx",["90","91"],"import React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\n\nimport { commerce } from '../../lib/commerce';\nimport FormInput from './FormInput';\n\nconst AddressForm = ({ checkoutToken, next }) => {\n    const [shippingCountries, setShippingCountries] = useState([]);\n    const [shippingCountry, setShippingCountry] = useState('');\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\n    const [shippingOptions, setShippingOptions] = useState([]);\n    const [shippingOption, setShippingOption] = useState('');\n    const methods = useForm();\n\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name }));\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name }));\n    const options = shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})`}));\n\n    const fetchShippingCountries = async (checkoutTokenId) => {\n        const resp = await commerce.services.localeListShippingCountries(checkoutTokenId);\n        setShippingCountries(resp.countries);\n        setShippingCountry(resp.countries['US']);\n    };\n\n    const fetchSubdivisions = async (countryCode) => {\n        const resp = await commerce.services.localeListSubdivisions(countryCode);\n\n        setShippingSubdivisions(resp.subdivisions);\n        setShippingSubdivision(Object.keys(resp.subdivisions)[0]);\n    };\n\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region });\n\n        setShippingOptions(options);\n        setShippingOption(options[0].id);\n    };\n\n    useEffect(() => {\n        fetchShippingCountries(checkoutToken.id);\n    }, []);\n\n    useEffect(() => {\n        if(shippingCountry) fetchSubdivisions(shippingCountry);\n    }, [shippingCountry]);\n\n    useEffect(() => {\n        if(shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n    }, [shippingSubdivision]);\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\n      <FormProvider {...methods}>\n        <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\n          <Grid container spacing={3}>\n            <FormInput required name=\"firstName\" label=\"First name\" />\n            <FormInput required name=\"lastName\" label=\"Last name\" />\n            <FormInput required name=\"address1\" label=\"Address line 1\" />\n            <FormInput required name=\"email\" label=\"Email\" />\n            <FormInput required name=\"city\" label=\"City\" />\n            <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Country</InputLabel>\n              <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\n                {countries.map((country) => (\n                  <MenuItem key={country.id} value={country.id}>\n                    {country.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Subdivision</InputLabel>\n              <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\n                {subdivisions.map((subdivision) => (\n                  <MenuItem key={subdivision.id} value={subdivision.id}>\n                    {subdivision.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Options</InputLabel>\n              <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\n                {options.map((option) => (\n                  <MenuItem key={option.id} value={option.id}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n          </Grid>\n          <br />\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\n          </div>\n        </form>\n      </FormProvider>\n    </>\n  );\n};\nexport default AddressForm;\n","/Users/danielway/Desktop/ecommerce-app/src/components/CheckoutFrom/PaymentForm.jsx",[],"/Users/danielway/Desktop/ecommerce-app/src/components/CheckoutFrom/FormInput.jsx",[],"/Users/danielway/Desktop/ecommerce-app/src/components/CheckoutFrom/Review.jsx",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":2,"column":46,"nodeType":"98","messageId":"99","endLine":2,"endColumn":54},{"ruleId":"96","severity":1,"message":"100","line":2,"column":56,"nodeType":"98","messageId":"99","endLine":2,"endColumn":60},{"ruleId":"101","severity":1,"message":"102","line":34,"column":8,"nodeType":"103","endLine":34,"endColumn":14,"suggestions":"104"},{"ruleId":"101","severity":1,"message":"105","line":44,"column":8,"nodeType":"103","endLine":44,"endColumn":10,"suggestions":"106"},{"ruleId":"101","severity":1,"message":"107","line":52,"column":8,"nodeType":"103","endLine":52,"endColumn":29,"suggestions":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["111"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["112"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [cart, history]",{"range":"120","text":"121"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"122","text":"123"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"124","text":"125"},[1283,1289],"[cart, history]",[2052,2054],"[checkoutToken.id]",[2311,2332],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]